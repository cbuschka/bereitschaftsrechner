{"version":3,"sources":["util.js","dateconv.js","datetimeconv.js","DayInput.js","timeconv.js","TimeInput.js","DurationOutput.js","TimeOutput.js","changeFieldAction.js","calculator.js","model.js","App.js","index.js"],"names":["zeroPadded","d","isNaN","isValidDate","toISOString","getTime","dateWithTimeToDate","time","parts","match","length","Date","getFullYear","getMonth","getDate","parseInt","isDate","DayInput","onChange","ev","props","target","value","id","this","type","className","React","Component","millisToHhDotMm","dauerInMillis","minutes","Math","floor","hours","hhDotMmtoMillis","hhDotMm","result","exec","dateToTimeInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","TimeInput","dateToHhMm","DurationOutput","readOnly","TimeOutput","changeField","fieldName","dispatcher","dispatch","data","calculator","einsatzStartDatum","einsatzEndeDatum","ueblicherArbeitsbeginn","arbeitDauerInMillis","undefined","a","b","einsatzDauerInMillis","ueblicherArbeitsbeginnDatum","sperrzeitEndeDatum","berechneSperrzeitEndeDatum","aufschubstartDatum","buchungBeginnDatum","pauseDauerInMillis","buchungEndeDatum","gesamtDauerNetto","gesamtDauerBrutto","buchungDauerInMillis","sperrzeitEnde","buchungBeginn","buchungEnde","buchungDauer","einsatzDauer","console","log","model","einsatzTag","einsatzBeginn","einsatzEnde","arbeitBeginn","arbeitEnd","einsatzTagDate","v","yyyyMmDdToDate","arbeitBeginnDatum","arbeitEndeDatum","arbeitEnde","arbeitDauer","berechneBuchung","App","setState","state","addHandler","subscribe","unsubscribe","removeHandler","Container","tag","Form","htmlFor","onEinsatzTagChanged","onEinsatzBeginnChanged","onEinsatzEndeChanged","onArbeitBeginnChanged","onArbeitEndeChanged","onUeblicherArbeitsbeginnChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAO,SAASA,EAAWC,GACvB,MAAiB,kBAANA,GAAkBC,MAAMD,GACxBA,EAGPA,GAAK,GAAKA,EAAI,GACP,IAAMA,EAGV,GAAKA,ECPT,SAASE,EAAYF,GACxB,MAAoB,kBAANA,GACPA,EAAEG,aACqB,kBAAhBH,EAAEI,YACRH,MAAMD,EAAEI,WCJb,SAASC,EAAmBL,EAAGM,GAClC,GAAKJ,EAAYF,IAAOM,GAIJ,kBAATA,EAAX,CAIA,IAAMC,EAAQD,EAAKE,MAAM,eACzB,GAAKD,GAA0B,IAAjBA,EAAME,OAIpB,OAAO,IAAIC,KAAKV,EAAEW,cAAeX,EAAEY,WAAYZ,EAAEa,UAAWC,SAASP,EAAM,IAAKO,SAASP,EAAM,MAG5F,SAASQ,EAAOf,GACnB,OAAOE,EAAYF,GChBhB,IAAMgB,EAAb,4MAEIC,SAAW,SAACC,GAAQ,IACTD,EAAY,EAAKE,MAAjBF,SAEHA,GAEAA,EADiBC,EAAGE,OAAOC,MACRH,IAP/B,uDAWc,IFIiBlB,EEHhBsB,EAAMC,KAAKJ,MAAXG,GADF,EAEcC,KAAKJ,MAAnBE,aAFA,MAEQ,GAFR,EAQL,OAJIN,EAAOM,KACPA,EFADtB,GADoBC,EECIqB,GFAXV,eAAiB,IAAMZ,EAAWC,EAAEY,YAAc,IAAMb,EAAWC,EAAEa,YEG9E,uBAAOW,KAAK,OACLC,UAAU,eACVR,SAAUM,KAAKN,SACfK,GAAIA,EAAID,MAAOA,QAtBrC,GAA8BK,IAAMC,WCG7B,SAASC,EAAgBC,GAC5B,GAA6B,kBAAlBA,IAA8B5B,MAAM4B,GAA/C,CAIA,IAAMC,EAAU/B,EAAWgC,KAAKC,MAAOH,EAAa,IAAkB,KAChEI,EAAQlC,EAAWgC,KAAKC,MAAOH,EAAa,KAAuB,KAEzE,MAAM,GAAN,OAAUI,EAAV,YAAmBH,IAGhB,SAASI,EAAgBC,GAC5B,GAAuB,kBAAZA,EAAX,CAIA,IAAMC,EAAS,cAAcC,KAAKF,GAClC,GAAKC,GAA4B,IAAlBA,EAAO3B,OAGtB,OAA6B,IAAtBK,SAASsB,EAAO,IAAa,GAAK,GAA2B,IAAtBtB,SAASsB,EAAO,IAAa,IAGxE,SAASE,EAAqBtC,GACjC,GAAKE,EAAYF,GAAjB,CAIA,IAAIuC,EAAQ,IAAI7B,KAAKV,GAErB,OADAuC,EAAMC,WAAWxC,EAAEyC,aAAezC,EAAE0C,qBAC7BH,EAAMI,SAASC,MAAM,GAAI,KCjC7B,IAAMC,EAAb,4MAEI5B,SAAW,SAACC,GAAQ,IACTD,EAAY,EAAKE,MAAjBF,SAEHA,GAEAA,EADiBC,EAAGE,OAAOC,MACRH,IAP/B,uDAWc,IACCI,EAAMC,KAAKJ,MAAXG,GADF,EAEcC,KAAKJ,MAAnBE,aAFA,MAEQ,GAFR,EAQL,OAJIN,EAAOM,KACPA,EDoBL,SAAoBrB,GACvB,GAAKE,EAAYF,GAAjB,CAIA,IAAIuC,EAAQ,IAAI7B,KAAKV,GAErB,OADAuC,EAAMC,WAAWxC,EAAEyC,aAAezC,EAAE0C,qBAC7BH,EAAMI,SAASC,MAAM,GAAI,KC3BhBE,CAAWzB,IAGhB,uBAAOG,KAAK,OAAOC,UAAU,eACtBR,SAAUM,KAAKN,SACfK,GAAIA,EAAID,MAAOA,QArBrC,GAA+BK,IAAMC,WCFxBoB,EAAb,uKACc,IAAD,EACoBxB,KAAKJ,MAAvBG,EADF,EACEA,GADF,IACMD,aADN,MACc,GADd,EAEL,OAAO,wBAAQ2B,UAAQ,EAACvB,UAAU,eAAeH,GAAIA,EAA9C,SAAmDD,QAHlE,GAAoCK,IAAMC,W,OCA7BsB,EAAb,uKACc,IAAD,EACoB1B,KAAKJ,MAAvBG,EADF,EACEA,GADF,IACMD,aADN,MACc,GADd,EAEL,OAAO,wBAAQ2B,UAAQ,EAACvB,UAAU,eAAeH,GAAIA,EAA9C,SAAmDD,QAHlE,GAAgCK,IAAMC,WCA/B,SAASuB,EAAYC,EAAW9B,GACnC,OAAO+B,IAAWC,SAAS,CAAC7B,KAAM,eAAgB8B,KAAM,CAACH,YAAW9B,W,eCwC3DkC,EAAa,I,wGAjCNC,EAAmBC,EAAkBC,EAAwBC,QAC7CC,IAAxBD,IACAA,EAAsB,GAG1B,ITHYE,EAAGC,ESGTC,EAAuBN,EAAmBD,EAC1CQ,EAA8B3D,EAAmBmD,EAAmBE,GACpEO,EAbd,SAAoCR,GAChC,OAAO,IAAI/C,KAAK+C,EAAiBrD,UAAY8B,EAAgB,UAY9BgC,CAA2BT,GAChDU,GTNMN,ESMmBG,ITNhBF,ESM6CL,GTJrDI,EAEJC,ESGGM,EAAqB,IAAI1D,KAAKyD,EAAmB/D,UAAY2D,GAC/DM,EAAqB,EACrBV,EAAsB,IACtBU,EAAqB,KAEzB,IAAMC,EAAmB,IAAI5D,KAAKuD,EAAmB7D,UAAYuD,EAAsBU,GACjFE,EAAmBR,EAAuBJ,EAC1Ca,EAAoBD,EAAmBF,EACzCI,EAAuBH,EAAmBF,EAExChC,EAAS,CACXsC,cAAepC,EAAqB2B,GACpCU,cAAerC,EAAqB8B,GACpCQ,YAAatC,EAAqBgC,GAClCO,aAAcjD,EAAgB6C,GAC9BK,aAAclD,EAAgBmC,GAC9BQ,iBAAkB3C,EAAgB2C,GAClCC,kBAAmB5C,EAAgB4C,IAGvC,OADAO,QAAQC,IAAI,KAAM5C,GACXA,M,MCiCF6C,EAAQ,I,WAlEjB,aAAe,oBACX1D,KAAK+B,KAAO,CACR4B,WAAY,aACZC,cAAe,QACfC,YAAa,QACb1B,uBAAwB,QACxB2B,aAAc,QACdC,UAAW,S,8DAIyB,IAAD,IAA3BhC,KAAOH,EAAoB,EAApBA,UAAW9B,EAAS,EAATA,MAC9BE,KAAK+B,KAAKH,GAAa9B,I,mCAGdD,GACT,IAAMmE,ETSP,SAAwBC,GAC3B,GAAiB,kBAANA,EAAX,CAIA,IAAMjF,EAAQiF,EAAEhF,MAAM,qBACtB,GAAKD,GAA0B,IAAjBA,EAAME,OAGpB,OAAO,IAAIC,KAAKI,SAASP,EAAM,IAAKO,SAASP,EAAM,IAAKO,SAASP,EAAM,MSlB5CkF,CAAelE,KAAK+B,KAAK4B,YAC1C1B,EAAoBnD,EAAmBkF,EAAgBhE,KAAK+B,KAAK6B,eACjE1B,EAAmBpD,EAAmBkF,EAAgBhE,KAAK+B,KAAK8B,aAChE1B,EAAyBnC,KAAK+B,KAAKI,uBACnCgC,EAAoBrF,EAAmBkF,EAAgBhE,KAAK+B,KAAK+B,cACjEM,EAAkBtF,EAAmBkF,EAAgBhE,KAAK+B,KAAKsC,YACjEC,EAAc,EAIlB,GAHIH,GAAqBC,IACrBE,EAAcjE,EAAgB+D,EAAkBD,IAEhDlC,GAAqBC,GAAoBC,EAAwB,CAAC,IAAD,EAS7DH,EAAWuC,gBAAgBtC,EAC3BC,EACAC,EACAxB,EAAgB2D,IAVhBnB,EAF6D,EAE7DA,cACAC,EAH6D,EAG7DA,cACAC,EAJ6D,EAI7DA,YACAC,EAL6D,EAK7DA,aACAC,EAN6D,EAM7DA,aACAP,EAP6D,EAO7DA,iBACAC,EAR6D,EAQ7DA,kBAKJpD,EAAOmC,WAAP,2BACOhC,KAAK+B,MADZ,IAEIoB,gBACAC,gBACAC,cACAC,eACAC,eACAN,oBACAD,mBACAsB,qBAGJzE,EAAOmC,WAAP,2BACOhC,KAAK+B,MADZ,IAEIoB,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,aAAc,GACdN,kBAAmB,GACnBD,iBAAkB,GAClBsB,YAAa,S,MCxDhBE,EAAb,kDAEI,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IAKVF,SAAW,YAAa,IAAD,IAAVqC,KAELC,WACI2B,EAHW,EAGXA,WAAYC,EAHD,EAGCA,cAAeC,EAHhB,EAGgBA,YAAaN,EAH7B,EAG6BA,aAAcpB,EAH3C,EAG2CA,uBACtD2B,EAJW,EAIXA,aAAcO,EAJH,EAIGA,WAAYC,EAJf,EAIeA,YAC1BnB,EALW,EAKXA,cACAC,EANW,EAMXA,cACAC,EAPW,EAOXA,YACAC,EARW,EAQXA,aACAL,EATW,EASXA,kBACAD,EAVW,EAUXA,iBAIR,EAAKyB,SAAS,CACVd,aAAYC,gBAAeC,cAAaN,eAAcpB,yBACtD2B,eAAcO,aAAYC,cAC1BnB,gBACAC,gBACAC,cACAC,eACAL,oBACAD,sBAzBJ,EAAK0B,MAAQ,GAHE,EAFvB,gEAmCQ7C,IAAW8C,WAAWjB,GACtB7B,IAAW+C,UAAU5E,KAAKN,YApClC,6CAwCQmC,IAAWgD,YAAY7E,KAAKN,UAC5BmC,IAAWiD,cAAcpB,KAzCjC,+BA4Cc,IAAD,EAOD1D,KAAK0E,MALLf,EAFC,EAEDA,WAAYC,EAFX,EAEWA,cAAeC,EAF1B,EAE0BA,YAAaN,EAFvC,EAEuCA,aACxCJ,EAHC,EAGDA,cAAeW,EAHd,EAGcA,aAAcO,EAH5B,EAG4BA,WAAYC,EAHxC,EAGwCA,YACzCnC,EAJC,EAIDA,uBACAiB,EALC,EAKDA,cAAeC,EALd,EAKcA,YAAaC,EAL3B,EAK2BA,aAC5BN,EANC,EAMDA,iBAAkBC,EANjB,EAMiBA,kBAItB,OACI,qBAAK/C,UAAU,MAAf,SACI,eAAC6E,EAAA,EAAD,CAAWC,IAAI,UAAf,UACI,sDACA,4BAAG,qEACH,eAACC,EAAA,EAAD,WACI,yCACA,sBAAK/E,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBAAOgF,QAAQ,aAAf,kBACA,cAAC,EAAD,CAAUnF,GAAG,aAAaD,MAAO6D,EACvBjE,SAAUM,KAAKmF,2BAGjC,qBAAKjF,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBAAOgF,QAAQ,gBAAf,qBACA,cAAC,EAAD,CAAWnF,GAAG,gBAAgBD,MAAO8D,EAC1BlE,SAAUM,KAAKoF,8BAGlC,qBAAKlF,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,cAAf,mBACA,cAAC,EAAD,CAAWnF,GAAG,cAAcD,MAAO+D,EACxBnE,SAAUM,KAAKqF,4BAGlC,qBAAKnF,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,eAAf,oBACA,cAAC,EAAD,CAAgBnF,GAAG,eAAeD,MAAOyD,YAIrD,qBAAKrD,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,wBAAQuB,UAAQ,EAACvB,UAAU,cAAcD,KAAK,OAAOF,GAAG,qBACxD,wBAAQ0B,UAAQ,EAACvB,UAAU,cAAcD,KAAK,OAAOF,GAAG,wBACxD,wBAAQ0B,UAAQ,EAACvB,UAAU,cAAcD,KAAK,OAAOF,GAAG,sBACxD,wBAAQ0B,UAAQ,EAACvB,UAAU,cAAcD,KAAK,OAAOF,GAAG,uBAIhE,uBACA,2DACA,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,gBAAf,6BACA,cAAC,EAAD,CAAYnF,GAAG,gBAAgBD,MAAOqD,SAG9C,qBAAKjD,UAAU,MAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBAAOgF,QAAQ,eAAf,qBACA,cAAC,EAAD,CAAWnF,GAAG,eAAeD,MAAOgE,EACzBpE,SAAUM,KAAKsF,6BAGlC,qBAAKpF,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,aAAf,mBACA,cAAC,EAAD,CAAWnF,GAAG,aAAaD,MAAOuE,EACvB3E,SAAUM,KAAKuF,2BAGlC,qBAAKrF,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,cAAf,oBACA,cAAC,EAAD,CAAgBnF,GAAG,cAAcD,MAAOwE,YAKpD,uBACA,4CACA,qBAAKpE,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,yBAAf,wCACA,cAAC,EAAD,CAAWnF,GAAG,yBAAyBD,MAAOqC,EACnCzC,SAAUM,KAAKwF,yCAItC,qBAAKtF,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,wBAAQuB,UAAQ,EAACvB,UAAU,cAAcD,KAAK,OACtCF,GAAG,qCAInB,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,gBAAf,6BACA,cAAC,EAAD,CAAYzD,UAAQ,EAAC1B,GAAG,gBAAgBD,MAAOsD,SAGvD,qBAAKlD,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,cAAf,2BACA,cAAC,EAAD,CAAYpF,MAAOuD,EAAatD,GAAG,qBAG3C,qBAAKG,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,eAAf,4BACA,cAAC,EAAD,CAAgBpF,MAAOwD,EAAcvD,GAAG,yBAIpD,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,mBAAf,yCACA,cAAC,EAAD,CAAgBpF,MAAOkD,EAAkBjD,GAAG,0BAGpD,qBAAKG,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOgF,QAAQ,oBAAf,0CACA,cAAC,EAAD,CAAgBpF,MAAOmD,EAAmBlD,GAAG,wCAlLjF,0CA4LwBD,GAChB6B,EAAY,aAAc7B,KA7LlC,6CAgM2BA,GACnB6B,EAAY,gBAAiB7B,KAjMrC,2CAoMyBA,GACjB6B,EAAY,cAAe7B,KArMnC,sDAwMoCA,GAC5B6B,EAAY,yBAA0B7B,KAzM9C,4CA4M0BA,GAClB6B,EAAY,eAAgB7B,KA7MpC,0CAgNwBA,GAChB6B,EAAY,aAAc7B,OAjNlC,GAAyBK,IAAMC,WCL/BqF,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.02453723.chunk.js","sourcesContent":["export function zeroPadded(d) {\n    if (typeof d !== 'number' || isNaN(d)) {\n        return d;\n    }\n\n    if (d >= 0 && d < 10) {\n        return \"0\" + d;\n    }\n\n    return \"\" + d;\n}\n\nexport function max(a, b) {\n    if (a > b) {\n        return a;\n    }\n    return b;\n}\n","import {zeroPadded} from \"./util\";\n\nexport function isValidDate(d) {\n    return typeof d === 'object'\n        && d.toISOString\n        && typeof d.getTime() === 'number'\n        && !isNaN(d.getTime());\n}\n\nexport function dateToDateInputValue(d) {\n    if (!isValidDate(d)) {\n        return undefined;\n    }\n\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n}\n\nexport function dateToYyyyMmDd(d) {\n    return zeroPadded(d.getFullYear()) + \"-\" + zeroPadded(d.getMonth()) + \"-\" + zeroPadded(d.getDate());\n}\n\nexport function isValidYyyyMmDd(v) {\n    if (typeof v !== 'string') {\n        return false;\n    }\n\n    return v.match(/\\d+-\\d+-\\d+/);\n}\n\nexport function yyyyMmDdToDate(v) {\n    if (typeof v !== 'string') {\n        return undefined;\n    }\n\n    const parts = v.match(/(\\d+)-(\\d+)-(\\d+)/)\n    if (!parts || parts.length !== 4) {\n        return undefined;\n    }\n    return new Date(parseInt(parts[1]), parseInt(parts[2]), parseInt(parts[3]));\n}\n","import {isValidDate} from \"./dateconv\";\n\nexport function dateWithTimeToDate(d, time) {\n    if (!isValidDate(d) || !time) {\n        return undefined;\n    }\n\n    if (typeof time !== 'string') {\n        return undefined;\n    }\n\n    const parts = time.match(/(\\d+):(\\d+)/);\n    if (!parts || parts.length !== 3) {\n        return undefined;\n    }\n\n    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), parseInt(parts[1]), parseInt(parts[2]));\n}\n\nexport function isDate(d) {\n    return isValidDate(d);\n}\n","import React from 'react';\nimport {isDate} from \"./datetimeconv\";\nimport {dateToYyyyMmDd} from \"./dateconv\";\n\nexport class DayInput extends React.Component {\n\n    onChange = (ev) => {\n        const {onChange} = this.props;\n\n        if (onChange) {\n            const newValue = ev.target.value;\n            onChange(newValue, ev);\n        }\n    };\n\n    render() {\n        const {id} = this.props;\n        let {value = \"\"} = this.props;\n\n        if (isDate(value)) {\n            value = dateToYyyyMmDd(value);\n        }\n\n        return <input type=\"date\"\n                      className=\"form-control\"\n                      onChange={this.onChange}\n                      id={id} value={value}/>\n    }\n}\n","import {zeroPadded} from \"./util\";\nimport {isValidDate} from \"./dateconv\";\n\nexport function isValidHhDotMm(v) {\n    return /(\\d+):(\\d+)/.test(v);\n}\n\nexport function millisToHhDotMm(dauerInMillis) {\n    if (typeof dauerInMillis !== 'number' || isNaN(dauerInMillis)) {\n        return undefined;\n    }\n\n    const minutes = zeroPadded(Math.floor((dauerInMillis / (1000 * 60)) % 60));\n    const hours = zeroPadded(Math.floor((dauerInMillis / (1000 * 60 * 60)) % 24));\n\n    return `${hours}:${minutes}`\n}\n\nexport function hhDotMmtoMillis(hhDotMm) {\n    if (typeof hhDotMm !== 'string') {\n        return undefined;\n    }\n\n    const result = /(\\d+):(\\d+)/.exec(hhDotMm);\n    if (!result || result.length !== 3) {\n        return undefined;\n    }\n    return parseInt(result[1]) * 1000 * 60 * 60 + parseInt(result[2]) * 1000 * 60;\n}\n\nexport function dateToTimeInputValue(d) {\n    if (!isValidDate(d)) {\n        return undefined;\n    }\n\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(11, 16);\n}\n\nexport function dateToHhMm(d) {\n    if (!isValidDate(d)) {\n        return undefined;\n    }\n\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(11, 16);\n}\n","import React from 'react';\nimport {isDate} from \"./datetimeconv\";\nimport {dateToHhMm} from \"./timeconv\";\n\nexport class TimeInput extends React.Component {\n\n    onChange = (ev) => {\n        const {onChange} = this.props;\n\n        if (onChange) {\n            const newValue = ev.target.value;\n            onChange(newValue, ev);\n        }\n    };\n\n    render() {\n        const {id} = this.props;\n        let {value = \"\"} = this.props;\n\n        if (isDate(value)) {\n            value = dateToHhMm(value);\n        }\n\n        return <input type=\"time\" className=\"form-control\"\n                      onChange={this.onChange}\n                      id={id} value={value}/>\n    }\n}\n","import React from 'react';\n\nexport class DurationOutput extends React.Component {\n    render() {\n        const {id, value = \"\"} = this.props;\n        return <output readOnly className=\"form-control\" id={id}>{value}</output>\n    }\n}\n","import React from 'react';\n\nexport class TimeOutput extends React.Component {\n    render() {\n        const {id, value = \"\"} = this.props;\n        return <output readOnly className=\"form-control\" id={id}>{value}</output>\n    }\n}\n","import {dispatcher} from \"@cbuschka/flux\";\n\nexport function changeField(fieldName, value) {\n    return dispatcher.dispatch({type: \"fieldChanged\", data: {fieldName, value}})\n}\n","import {max} from \"./util\";\nimport {dateToTimeInputValue, hhDotMmtoMillis, millisToHhDotMm} from \"./timeconv\";\nimport {dateWithTimeToDate} from \"./datetimeconv\";\n\nfunction berechneSperrzeitEndeDatum(einsatzEndeDatum) {\n    return new Date(einsatzEndeDatum.getTime() + hhDotMmtoMillis(\"11:00\"));\n}\n\n\nclass Calculator {\n    berechneBuchung(einsatzStartDatum, einsatzEndeDatum, ueblicherArbeitsbeginn, arbeitDauerInMillis) {\n        if (arbeitDauerInMillis === undefined) {\n            arbeitDauerInMillis = 0;\n        }\n\n        const einsatzDauerInMillis = einsatzEndeDatum - einsatzStartDatum;\n        const ueblicherArbeitsbeginnDatum = dateWithTimeToDate(einsatzStartDatum, ueblicherArbeitsbeginn);\n        const sperrzeitEndeDatum = berechneSperrzeitEndeDatum(einsatzEndeDatum);\n        const aufschubstartDatum = max(ueblicherArbeitsbeginnDatum, einsatzEndeDatum);\n        const buchungBeginnDatum = new Date(aufschubstartDatum.getTime() + einsatzDauerInMillis);\n        let pauseDauerInMillis = 0;\n        if (arbeitDauerInMillis > 0) {\n            pauseDauerInMillis = 1000 * 60 * 50;\n        }\n        const buchungEndeDatum = new Date(sperrzeitEndeDatum.getTime() + arbeitDauerInMillis + pauseDauerInMillis);\n        const gesamtDauerNetto = einsatzDauerInMillis + arbeitDauerInMillis;\n        const gesamtDauerBrutto = gesamtDauerNetto + pauseDauerInMillis;\n        let buchungDauerInMillis = buchungEndeDatum - buchungBeginnDatum;\n\n        const result = {\n            sperrzeitEnde: dateToTimeInputValue(sperrzeitEndeDatum),\n            buchungBeginn: dateToTimeInputValue(buchungBeginnDatum),\n            buchungEnde: dateToTimeInputValue(buchungEndeDatum),\n            buchungDauer: millisToHhDotMm(buchungDauerInMillis),\n            einsatzDauer: millisToHhDotMm(einsatzDauerInMillis),\n            gesamtDauerNetto: millisToHhDotMm(gesamtDauerNetto),\n            gesamtDauerBrutto: millisToHhDotMm(gesamtDauerBrutto)\n        };\n        console.log(\"%o\", result)\n        return result;\n    }\n}\n\nexport const calculator = new Calculator();\n","import {calculator} from \"./calculator\";\nimport {hhDotMmtoMillis, millisToHhDotMm} from \"./timeconv\";\nimport {dateWithTimeToDate} from \"./datetimeconv\";\nimport {yyyyMmDdToDate} from \"./dateconv\";\n\nclass Model {\n    constructor() {\n        this.data = {\n            einsatzTag: \"2020-11-01\",\n            einsatzBeginn: \"01:45\",\n            einsatzEnde: \"06:45\",\n            ueblicherArbeitsbeginn: \"06:30\",\n            arbeitBeginn: \"15:00\",\n            arbeitEnd: \"17:00\"\n        };\n    }\n\n    onFieldChanged({data: {fieldName, value}}) {\n        this.data[fieldName] = value;\n    }\n\n    appendDataTo(target) {\n        const einsatzTagDate = yyyyMmDdToDate(this.data.einsatzTag);\n        const einsatzStartDatum = dateWithTimeToDate(einsatzTagDate, this.data.einsatzBeginn);\n        const einsatzEndeDatum = dateWithTimeToDate(einsatzTagDate, this.data.einsatzEnde);\n        const ueblicherArbeitsbeginn = this.data.ueblicherArbeitsbeginn;\n        const arbeitBeginnDatum = dateWithTimeToDate(einsatzTagDate, this.data.arbeitBeginn);\n        const arbeitEndeDatum = dateWithTimeToDate(einsatzTagDate, this.data.arbeitEnde);\n        let arbeitDauer = 0;\n        if (arbeitBeginnDatum && arbeitEndeDatum) {\n            arbeitDauer = millisToHhDotMm(arbeitEndeDatum - arbeitBeginnDatum);\n        }\n        if (einsatzStartDatum && einsatzEndeDatum && ueblicherArbeitsbeginn) {\n            const {\n                sperrzeitEnde,\n                buchungBeginn,\n                buchungEnde,\n                buchungDauer,\n                einsatzDauer,\n                gesamtDauerNetto,\n                gesamtDauerBrutto\n            } = calculator.berechneBuchung(einsatzStartDatum,\n                einsatzEndeDatum,\n                ueblicherArbeitsbeginn,\n                hhDotMmtoMillis(arbeitDauer));\n            target.calculator = {\n                ...this.data,\n                sperrzeitEnde,\n                buchungBeginn,\n                buchungEnde,\n                buchungDauer,\n                einsatzDauer,\n                gesamtDauerBrutto,\n                gesamtDauerNetto,\n                arbeitDauer\n            };\n        } else {\n            target.calculator = {\n                ...this.data,\n                sperrzeitEnde: \"\",\n                buchungBeginn: \"\",\n                buchungEnde: \"\",\n                buchungDauer: \"\",\n                einsatzDauer: \"\",\n                gesamtDauerBrutto: \"\",\n                gesamtDauerNetto: \"\",\n                arbeitDauer: \"\"\n            };\n        }\n    }\n}\n\nexport const model = new Model();\n","import React from 'react';\nimport {Container, Form} from \"reactstrap\";\nimport {DayInput} from \"./DayInput\";\nimport {TimeInput} from './TimeInput';\nimport {DurationOutput} from \"./DurationOutput\";\nimport {dispatcher} from \"@cbuschka/flux\";\nimport {TimeOutput} from \"./TimeOutput\";\nimport {changeField} from \"./changeFieldAction\";\nimport {model} from \"./model\";\n\nexport class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    onChange = ({data}) => {\n        const {\n            calculator: {\n                einsatzTag, einsatzBeginn, einsatzEnde, einsatzDauer, ueblicherArbeitsbeginn,\n                arbeitBeginn, arbeitEnde, arbeitDauer,\n                sperrzeitEnde,\n                buchungBeginn,\n                buchungEnde,\n                buchungDauer,\n                gesamtDauerBrutto,\n                gesamtDauerNetto\n            }\n        } = data;\n\n        this.setState({\n            einsatzTag, einsatzBeginn, einsatzEnde, einsatzDauer, ueblicherArbeitsbeginn,\n            arbeitBeginn, arbeitEnde, arbeitDauer,\n            sperrzeitEnde,\n            buchungBeginn,\n            buchungEnde,\n            buchungDauer,\n            gesamtDauerBrutto,\n            gesamtDauerNetto\n        });\n    };\n\n    componentDidMount() {\n        dispatcher.addHandler(model);\n        dispatcher.subscribe(this.onChange);\n    }\n\n    componentWillUnmount() {\n        dispatcher.unsubscribe(this.onChange);\n        dispatcher.removeHandler(model);\n    }\n\n    render() {\n        const {\n            einsatzTag, einsatzBeginn, einsatzEnde, einsatzDauer,\n            sperrzeitEnde, arbeitBeginn, arbeitEnde, arbeitDauer,\n            ueblicherArbeitsbeginn,\n            buchungBeginn, buchungEnde, buchungDauer,\n            gesamtDauerNetto, gesamtDauerBrutto\n        } = this.state;\n\n\n        return (\n            <div className=\"App\">\n                <Container tag=\"section\">\n                    <h1>Bereitschaftsrechner</h1>\n                    <p><small>(Alle Angaben ohne Gewähr!)</small></p>\n                    <Form>\n                        <h4>Einsatz</h4>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group \">\n                                    <label htmlFor=\"einsatzTag\">Tag:</label>\n                                    <DayInput id=\"einsatzTag\" value={einsatzTag}\n                                              onChange={this.onEinsatzTagChanged}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group \">\n                                    <label htmlFor=\"einsatzBeginn\">Beginn:</label>\n                                    <TimeInput id=\"einsatzBeginn\" value={einsatzBeginn}\n                                               onChange={this.onEinsatzBeginnChanged}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"einsatzEnde\">Ende:</label>\n                                    <TimeInput id=\"einsatzEnde\" value={einsatzEnde}\n                                               onChange={this.onEinsatzEndeChanged}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"einsatzDauer\">Dauer:</label>\n                                    <DurationOutput id=\"einsatzDauer\" value={einsatzDauer}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <output readOnly className=\"text-danger\" type=\"text\" id=\"einsatzTagFehler\"/>\n                                <output readOnly className=\"text-danger\" type=\"text\" id=\"einsatzBeginnFehler\"/>\n                                <output readOnly className=\"text-danger\" type=\"text\" id=\"einsatzEndeFehler\"/>\n                                <output readOnly className=\"text-danger\" type=\"text\" id=\"einsatzFehler\"/>\n                            </div>\n                        </div>\n\n                        <hr/>\n                        <h4>Arbeit (nach dem Einsatz)</h4>\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"sperrzeitEnde\">Sperrzeit-Ende:</label>\n                                    <TimeOutput id=\"sperrzeitEnde\" value={sperrzeitEnde}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group \">\n                                    <label htmlFor=\"arbeitBeginn\">Beginn:</label>\n                                    <TimeInput id=\"arbeitBeginn\" value={arbeitBeginn}\n                                               onChange={this.onArbeitBeginnChanged}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"arbeitEnde\">Ende:</label>\n                                    <TimeInput id=\"arbeitEnde\" value={arbeitEnde}\n                                               onChange={this.onArbeitEndeChanged}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"arbeitDauer\">Dauer:</label>\n                                    <DurationOutput id=\"arbeitDauer\" value={arbeitDauer}/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <hr/>\n                        <h4>Verbuchung</h4>\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"ueblicherArbeitsbeginn\">Üblicher Arbeitsbeginn:</label>\n                                    <TimeInput id=\"ueblicherArbeitsbeginn\" value={ueblicherArbeitsbeginn}\n                                               onChange={this.onUeblicherArbeitsbeginnChanged}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <output readOnly className=\"text-danger\" type=\"text\"\n                                        id=\"ueblicherArbeitsbeginnFehler\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"buchungBeginn\">Buchung-Beginn:</label>\n                                    <TimeOutput readOnly id=\"buchungBeginn\" value={buchungBeginn}/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"buchungEnde\">Buchung-Ende:</label>\n                                    <TimeOutput value={buchungEnde} id=\"buchungEnde\"/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"buchungDauer\">Buchung-Dauer:</label>\n                                    <DurationOutput value={buchungDauer} id=\"buchungDauer\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"gesamtDauerNetto\">Gesamt-Dauer (ohne Pausen):</label>\n                                    <DurationOutput value={gesamtDauerNetto} id=\"gesamtDauerNetto\"/>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"gesamtDauerBrutto\">Gesamt-Dauer (inkl. Pausen):</label>\n                                    <DurationOutput value={gesamtDauerBrutto} id=\"gesamtDauerBrutto\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </Form>\n                </Container>\n            </div>\n        );\n    }\n\n    onEinsatzTagChanged(value) {\n        changeField(\"einsatzTag\", value);\n    }\n\n    onEinsatzBeginnChanged(value) {\n        changeField(\"einsatzBeginn\", value);\n    }\n\n    onEinsatzEndeChanged(value) {\n        changeField(\"einsatzEnde\", value);\n    }\n\n    onUeblicherArbeitsbeginnChanged(value) {\n        changeField(\"ueblicherArbeitsbeginn\", value);\n    }\n\n    onArbeitBeginnChanged(value) {\n        changeField(\"arbeitBeginn\", value);\n    }\n\n    onArbeitEndeChanged(value) {\n        changeField(\"arbeitEnde\", value);\n    }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}