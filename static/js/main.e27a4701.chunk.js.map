{"version":3,"sources":["util.js","timeconv.js","model.js","dateconv.js","index.js"],"names":["zeroPadded","d","undefined","millisToHhDotMm","dauerInMillis","minutes","Math","floor","hours","hhDotMmtoMillis","hhDotMm","result","exec","parseInt","dateToTimeInputValue","local","Date","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","model","this","einsatzStartDatum","einsatzEndeDatum","ueblicherArbeitsbeginn","arbeitDauerInMillis","a","b","einsatzDauerInMillis","einsatzTag","dateToDateInputValue","ueblicherArbeitsbeginnDatum","sperrzeitEndeDatum","getTime","aufschubstartDatum","buchungBeginnDatum","pauseDauerInMillis","buchungEndeDatum","gesamtDauerNetto","gesamtDauerBrutto","buchungDauer","sperrzeitEnde","beginn","ende","dauer","$","document","ready","$einsatzTag","$einsatzTagFehler","$einsatzFehler","$einsatzBeginnFehler","$einsatzEndeFehler","$einsatzBeginn","$einsatzEnde","$einsatzDauer","$ueblicherArbeitsbeginn","$buchungBeginn","$sperrzeitEnde","$buchungEnde","$buchungDauer","$arbeitBeginn","$arbeitEnde","$arbeitDauer","$gesamtDauerBrutto","$gesamtDauerNetto","form","val","toLocaleDateString","v","update","einsatzBeginn","einsatzEnde","arbeitBeginn","arbeitEnde","einsatzTagFehler","einsatzDauer","einsatzBeginnFehler","einsatzEndeFehler","buchungBeginn","buchungEnde","arbeitDauer","arbeitBeginnDatum","buchung","berechneBuchung","change"],"mappings":"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","file":"static/js/main.e27a4701.chunk.js","sourcesContent":["export function zeroPadded(d) {\n    if (d === undefined) {\n        return d;\n    }\n\n    if (d >= 0 && d < 10) {\n        return \"0\" + d;\n    }\n\n    return \"\" + d;\n}\n\nexport function max(a, b) {\n    if (a > b) {\n        return a;\n    }\n    return b;\n}\n","import {zeroPadded} from \"./util\";\n\nexport function millisToHhDotMm(dauerInMillis) {\n    if (dauerInMillis === undefined) {\n        return undefined;\n    }\n\n    const minutes = zeroPadded(Math.floor((dauerInMillis / (1000 * 60)) % 60));\n    const hours = zeroPadded(Math.floor((dauerInMillis / (1000 * 60 * 60)) % 24));\n\n    return `${hours}:${minutes}`\n}\n\nexport function hhDotMmtoMillis(hhDotMm) {\n    if (hhDotMm === undefined) {\n        return undefined;\n    }\n\n    const result = /(\\d+):(\\d+)/.exec(hhDotMm);\n    return parseInt(result[1]) * 1000 * 60 * 60 + parseInt(result[2]) * 1000 * 60;\n}\n\nexport function dateToTimeInputValue(d) {\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(11, 16);\n}\n","import {dateToDateInputValue} from \"./dateconv\";\nimport {max} from \"./util\";\nimport {dateToTimeInputValue, hhDotMmtoMillis, millisToHhDotMm} from \"./timeconv\";\n\nfunction berechneSperrzeitEndeDatum(einsatzEndeDatum) {\n    return new Date(einsatzEndeDatum.getTime() + hhDotMmtoMillis(\"11:00\"));\n}\n\n\nclass Model {\n    constructor() {\n        this.einsatzStartDatum = undefined;\n        this.einsatzEndeDatum = undefined;\n        this.ueblicherArbeitsbeginn = undefined;\n        this.arbeitDauerInMillis = undefined;\n    }\n\n    berechneBuchung() {\n        const einsatzDauerInMillis = this.einsatzEndeDatum - this.einsatzStartDatum;\n        const einsatzTag = dateToDateInputValue(this.einsatzStartDatum);\n        const ueblicherArbeitsbeginnDatum = new Date(`${einsatzTag} ${this.ueblicherArbeitsbeginn}`);\n        const sperrzeitEndeDatum = berechneSperrzeitEndeDatum(this.einsatzEndeDatum);\n        const aufschubstartDatum = max(ueblicherArbeitsbeginnDatum, this.einsatzEndeDatum);\n        const buchungBeginnDatum = new Date(aufschubstartDatum.getTime() + einsatzDauerInMillis);\n        let pauseDauerInMillis = 0;\n        if (this.arbeitDauerInMillis > 0) {\n            pauseDauerInMillis = 1000 * 60 * 50;\n        }\n        const buchungEndeDatum = new Date(sperrzeitEndeDatum.getTime() + this.arbeitDauerInMillis + pauseDauerInMillis);\n        const gesamtDauerNetto = einsatzDauerInMillis + this.arbeitDauerInMillis;\n        const gesamtDauerBrutto = gesamtDauerNetto + pauseDauerInMillis;\n        let buchungDauer = buchungEndeDatum - buchungBeginnDatum;\n\n        return {\n            sperrzeitEnde: dateToTimeInputValue(sperrzeitEndeDatum),\n            beginn: dateToTimeInputValue(buchungBeginnDatum),\n            ende: dateToTimeInputValue(buchungEndeDatum),\n            dauer: millisToHhDotMm(buchungDauer),\n            gesamtDauerNetto: millisToHhDotMm(gesamtDauerNetto),\n            gesamtDauerBrutto: millisToHhDotMm(gesamtDauerBrutto)\n        };\n    }\n}\n\nexport const model = new Model();\n","export function dateToDateInputValue(d) {\n    var local = new Date(d);\n    local.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n}\n\n","import * as $ from 'jquery';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {hhDotMmtoMillis, millisToHhDotMm} from \"./timeconv\";\nimport {model} from \"./model\";\n\n$(document).ready(function () {\n    const $einsatzTag = $('#einsatzTag');\n    const $einsatzTagFehler = $('#einsatzTagFehler');\n    const $einsatzFehler = $('#einsatzFehler');\n    const $einsatzBeginnFehler = $('#einsatzBeginnFehler');\n    const $einsatzEndeFehler = $('#einsatzEndeFehler');\n    const $einsatzBeginn = $('#einsatzBeginn');\n    const $einsatzEnde = $('#einsatzEnde');\n    const $einsatzDauer = $('#einsatzDauer');\n    const $ueblicherArbeitsbeginn = $('#ueblicherArbeitsbeginn');\n    const $buchungBeginn = $('#buchungBeginn');\n    const $sperrzeitEnde = $('#sperrzeitEnde');\n    const $buchungEnde = $('#buchungEnde');\n    const $buchungDauer = $('#buchungDauer');\n    const $arbeitBeginn = $('#arbeitBeginn');\n    const $arbeitEnde = $('#arbeitEnde');\n    const $arbeitDauer = $('#arbeitDauer');\n    const $gesamtDauerBrutto = $('#gesamtDauerBrutto');\n    const $gesamtDauerNetto = $('#gesamtDauerNetto');\n\n    const form = {\n        init: function () {\n            $einsatzTag.val(new Date().toLocaleDateString('en-CA'));\n            $einsatzBeginn.val(\"00:45\");\n            $einsatzEnde.val(\"08:00\");\n            $ueblicherArbeitsbeginn.val('06:30');\n            $arbeitBeginn.val(\"00:00\");\n            $arbeitEnde.val(\"00:00\");\n        },\n        sperrzeitEnde: function (v) {\n            $sperrzeitEnde.val(v);\n        },\n        einsatzTagFehler: function (v) {\n            $einsatzTagFehler.val(v);\n        },\n        einsatzFehler: function (v) {\n            $einsatzFehler.val(v);\n        },\n        einsatzBeginnFehler: function (v) {\n            $einsatzBeginnFehler.val(v);\n        },\n        einsatzEndeFehler: function (v) {\n            $einsatzEndeFehler.val(v);\n        },\n        einsatzTag: function () {\n            return $einsatzTag.val();\n        },\n        einsatzBeginn: function () {\n            return $einsatzBeginn.val();\n        },\n        einsatzEnde: function () {\n            return $einsatzEnde.val();\n        },\n        einsatzDauer: function (v) {\n            $einsatzDauer.val(v);\n        },\n        arbeitBeginn: function () {\n            return $arbeitBeginn.val();\n        },\n        arbeitEnde: function () {\n            return $arbeitEnde.val();\n        },\n        arbeitDauer: function (v) {\n            $arbeitDauer.val(v);\n        },\n        buchungBeginn: function (v) {\n            return $buchungBeginn.val(v);\n        },\n        buchungEnde: function (v) {\n            return $buchungEnde.val(v);\n        },\n        buchungDauer: function (v) {\n            $buchungDauer.val(v);\n        },\n        ueblicherArbeitsbeginn: function () {\n            return $ueblicherArbeitsbeginn.val();\n        },\n        gesamtDauerBrutto: function (v) {\n            $gesamtDauerBrutto.val(v);\n        },\n        gesamtDauerNetto: function (v) {\n            $gesamtDauerNetto.val(v);\n        }\n    };\n\n    function update() {\n        const einsatzTag = form.einsatzTag();\n        const einsatzBeginn = form.einsatzBeginn();\n        const einsatzEnde = form.einsatzEnde();\n        const arbeitBeginn = form.arbeitBeginn();\n        const arbeitEnde = form.arbeitEnde();\n        const ueblicherArbeitsbeginn = form.ueblicherArbeitsbeginn();\n\n        let einsatzTagFehler = \"\";\n        if (!einsatzTag) {\n            einsatzTagFehler = \"Einsatz-Tag muss gesetzt sein.\";\n        }\n\n        let einsatzDauer = \"\";\n        let einsatzFehler = \"\";\n        let einsatzBeginnFehler = \"\";\n        let einsatzEndeFehler = \"\";\n        let buchungBeginn = \"\";\n        let buchungEnde = \"\";\n        let buchungDauer = \"\";\n        let sperrzeitEnde = \"\";\n        let arbeitDauer = \"00:00\";\n        let gesamtDauerBrutto = \"\";\n        let gesamtDauerNetto = \"\";\n\n        if (einsatzTag && einsatzBeginn && einsatzEnde) {\n\n            if (arbeitBeginn && arbeitEnde) {\n                let arbeitBeginnDatum = new Date(`${einsatzTag} ${arbeitBeginn}`);\n                let arbeitEndeDatum = new Date(`${einsatzTag} ${arbeitEnde}`);\n                arbeitDauer = millisToHhDotMm(arbeitEndeDatum - arbeitBeginnDatum);\n            }\n\n            if (einsatzBeginn < einsatzEnde) {\n                const einsatzStartDatum = new Date(`${einsatzTag} ${einsatzBeginn}`);\n                const einsatzEndeDatum = new Date(`${einsatzTag} ${einsatzEnde}`);\n                const einsatzDauerInMillis = einsatzEndeDatum - einsatzStartDatum;\n                einsatzDauer = millisToHhDotMm(einsatzDauerInMillis);\n\n                model.einsatzStartDatum = einsatzStartDatum;\n                model.einsatzEndeDatum = einsatzEndeDatum;\n                model.ueblicherArbeitsbeginn = ueblicherArbeitsbeginn;\n                model.arbeitDauerInMillis = hhDotMmtoMillis(arbeitDauer);\n                const buchung = model.berechneBuchung();\n\n                buchungBeginn = buchung.beginn;\n                buchungEnde = buchung.ende;\n                buchungDauer = buchung.dauer;\n                sperrzeitEnde = buchung.sperrzeitEnde;\n                gesamtDauerBrutto = buchung.gesamtDauerBrutto;\n                gesamtDauerNetto = buchung.gesamtDauerNetto;\n            } else {\n                einsatzBeginnFehler = \"Einsatz-Beginn muss vor -Ende liegen.\"\n                einsatzEndeFehler = \"Einsatz-Ende muss nach -Beginn liegen.\"\n            }\n        }\n\n        form.einsatzDauer(einsatzDauer);\n        form.einsatzTagFehler(einsatzTagFehler);\n        form.einsatzFehler(einsatzFehler);\n        form.einsatzBeginnFehler(einsatzBeginnFehler);\n        form.einsatzEndeFehler(einsatzEndeFehler);\n        form.buchungBeginn(buchungBeginn);\n        form.buchungEnde(buchungEnde);\n        form.buchungDauer(buchungDauer);\n        form.sperrzeitEnde(sperrzeitEnde);\n        form.arbeitDauer(arbeitDauer);\n        form.gesamtDauerBrutto(gesamtDauerBrutto);\n        form.gesamtDauerNetto(gesamtDauerNetto);\n    }\n\n    $('input').change(update);\n\n    form.init();\n    update();\n})\n;\n"],"sourceRoot":""}